{"version":3,"sources":["assets/img/map.png","assets/img/profile.jpg","assets/img/loading-content.gif","layout/Header.js","core/firebase/firebase.js","components/Login.js","components/LoadConfirmation.js","components/Signup.js","components/RealTime.js","core/services/data-holding-service.js","components/YourLoads.js","components/LoadDetails.js","components/Shipper.js","components/AllPayment.js","components/Setting.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","history","useHistory","useState","menuToggle","setMenuToggle","headerTitle","setHeaderTitle","userData","className","onClick","localStorage","clear","push","user","href","to","customer","account_type","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","checkUserLogin","JSON","parse","getItem","handleChange","event","setState","target","name","value","console","log","state","login","a","loading","tempCustomers","auth","signInWithEmailAndPassword","email","password","then","res","uid","setItem","stringify","database","ref","on","snapshot","customers","val","id","filter","item","company_email","window","location","catch","error","data","this","class","type","placeholder","onChange","React","Component","withRouter","LoadConfirmation","confirmLoad","update","confirmation","carrier","company_name","pickup_location","Date","pickup_date_time","toLocaleString","delivery_location","delivery_date_time","RealTime","sendUpdate","e","updateRef","updateData","driver","alert","pickupLoad","status","deliverLoad","load_type","rows","disabled","YourLoads","getLoads","account","tempLloads","filteredLoads","loads","map","i","customerData","shipper","setData","DataHolding","getData","length","key","LoadDetails","userDetails","customerDetails","getDetails","details","src","Shipper","AllPayment","Setting","getProfile","profile","contact","company_contact","onChangeInput","updateProfile","set","width","loadingContent","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0371bfdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map.650a2a15.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.782adc2b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading-content.3775a0f3.gif\";","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/css/header.css'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n\r\n    let history = useHistory();\r\n\r\n    const [menuToggle, setMenuToggle] = useState(false);\r\n    const [headerTitle, setHeaderTitle] = useState('');\r\n    const [userData, setUserData] = useState(props);\r\n\r\n    const logout = () => {\r\n        localStorage.clear('user');\r\n        // window.location.href = '/login';\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"header\">\r\n\r\n                <div className={\"mobile-menu-toggle \" + (menuToggle ? 'change' : '')} onClick={() => setMenuToggle(!menuToggle)}>\r\n                    <div className=\"bar1\"></div>\r\n                    <div className=\"bar2\"></div>\r\n                    <div className=\"bar3\"></div>\r\n                </div>\r\n\r\n                <div onClick={() => logout()} className={!userData.user ? 'display-none' : 'logout-b'}>\r\n                    <i className=\"fas fa-power-off\"></i>\r\n                </div>\r\n\r\n                <h4 className=\"header-title\">{headerTitle}</h4>\r\n\r\n                <div className=\"desktop-menu container\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                            <div className='logo'>\r\n                                {/* <img src={logo} /> */}\r\n                                <a href=\"#\">Dominus Freight</a>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                            <div className=\"nav\">\r\n                                 <ul>\r\n                                    <li><Link to=\"/login\">Login</Link></li>\r\n                                    {/* <li><Link to=\"/signup\">Sign Up</Link></li> */}\r\n                                    <li><Link to=\"/loadconfirmation\">Load Confirmation</Link></li>\r\n                                    <li><Link to=\"/realtime\">Real Time Tracking</Link></li> \r\n                                    <li><Link to=\"/yourloads\">Your Loads</Link></li>\r\n                                    <li><Link to=\"/loaddetails\">Load Details</Link></li> \r\n                                    <li><Link to=\"/shipper\">Shipper</Link></li> \r\n                                    <li><Link to=\"/allpayment\">All Payment</Link></li>\r\n                                    <li><Link to=\"/setting\">Setting</Link></li>\r\n                                 </ul>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                     userData.user && userData.customer ?\r\n                     <div className={\"mobile-menu sidenav \" + (menuToggle ? 'open' : 'close')}>\r\n                        <Link to=\"/login\" \r\n                            className={userData.user ? 'display-none' : ''}\r\n                            onClick={() => { setMenuToggle(!menuToggle); setHeaderTitle('Login')} }>\r\n                            Login\r\n                        </Link>\r\n    \r\n                        <Link to=\"/yourloads\"\r\n                            onClick={() => { setMenuToggle(!menuToggle); setHeaderTitle('Your Loads')}}>\r\n                            Your Loads\r\n                        </Link>\r\n    \r\n                        <Link to=\"/allpayment\" \r\n                            className={userData.customer.account_type == 'shipper' ? '' : 'display-none'}\r\n                            onClick={() => { setMenuToggle(!menuToggle); setHeaderTitle('All Payment')}}> \r\n                            All Payment \r\n                        </Link>\r\n    \r\n                        <Link to=\"/setting\"\r\n                            onClick={() => { setMenuToggle(!menuToggle); setHeaderTitle('Setting')}}> \r\n                            Setting \r\n                        </Link>\r\n                    </div>\r\n                    :\r\n                    <div className={\"mobile-menu sidenav \" + (menuToggle ? 'open' : 'close')}>\r\n                        <Link to=\"/login\"\r\n                            onClick={() => { setMenuToggle(!menuToggle); setHeaderTitle('Login')} }>\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import * as firebase from \"firebase\";\r\nimport \"firebase/database\";\r\n\r\nvar firebaseConfig  = {\r\n    apiKey: \"AIzaSyAZj7RccF1Va_kUpmFE1vlADn3xq3Gw13o\",\r\n    authDomain: \"dominus-freight.firebaseapp.com\",\r\n    databaseURL: \"https://dominus-freight.firebaseio.com\",\r\n    projectId: \"dominus-freight\",\r\n    storageBucket: \"dominus-freight.appspot.com\",\r\n    messagingSenderId: \"155397332378\",\r\n    appId: \"1:155397332378:web:017119f8d084e4292aee23\",\r\n    measurementId: \"G-EZC03J3VVC\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig );\r\nfirebase.analytics();\r\n\r\n\r\nexport default firebase;","import React from 'react';\r\nimport '../assets/css/login.css';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../core/firebase/firebase';\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            email: '',\r\n            password: '',\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"Login\");\r\n\r\n        this.checkUserLogin();\r\n    }\r\n\r\n    checkUserLogin = () => {\r\n        let userData = JSON.parse(localStorage.getItem('user'));\r\n        if(userData) this.props.history.push('/yourloads')\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n        console.log(this.state);\r\n    }\r\n\r\n    login = async() => {\r\n        this.setState({ loading: true });\r\n        let tempCustomers = [];\r\n\r\n        await firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(res => {\r\n            if (res.user.uid) {\r\n                localStorage.setItem('user', JSON.stringify(res.user));\r\n\r\n                const customerRef = firebase.database().ref('customers');\r\n\r\n                customerRef.on('value', (snapshot) => {\r\n                    const customers = snapshot.val();\r\n                    for (let id in customers) {\r\n                      tempCustomers.push({ id, ...customers[id] });\r\n                    }\r\n\r\n                    let customer = tempCustomers.filter(item => item.company_email == res.user.email);\r\n                    localStorage.setItem('customer', JSON.stringify(customer[0]));\r\n\r\n                    // this.props.history.push('/yourloads');\r\n                    window.location.href = \"https://muhammadawaisshaikh.github.io/dominus-freight-app\";\r\n\r\n                    this.setState({ loading: false });\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            // driver\r\n            <section> \r\n                <div className=\"login-form py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div class=\"form-group\">\r\n                                            <label>Email address</label>\r\n                                            <input type=\"email\" class=\"form-control\" placeholder=\"Enter email\" name=\"email\" value={this.state.email} onChange={(event) => this.handleChange(event)}/>\r\n                                            <small class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label>Password</label>\r\n                                            <input type=\"password\" name=\"password\" className=\"form-control\" value={this.state.password} onChange={(event) => this.handleChange(event)} placeholder=\"Password\" />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6 col-md-6\">\r\n                                                <div class=\"form-check pb-2\">\r\n                                                    <input type=\"checkbox\" class=\"form-check-input\" />\r\n                                                    <label class=\"form-check-label\"><small>Remember Me</small></label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6 col-md-6\">\r\n                                                <a className=\"d-block text-right\"><small>Forget Password?</small></a>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        {\r\n                                            !this.state.loading ?\r\n                                            <a className=\"btn btn-primary w-100 mt-5 font-weight-bold\" onClick={ () => {this.login()} }>Login</a>\r\n                                            :\r\n                                            <p className=\"text-center mt-5\"><b>Loading ...</b></p>\r\n                                        }\r\n\r\n                                        {/* <div className=\"col-12 col-md-6 text-center pt-3\">\r\n                                            <Link to=\"/signup\">Don't have an account? Sign Up</Link>\r\n                                        </div> */}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Login);","import React from 'react';\r\nimport firebase from '../core/firebase/firebase';\r\nimport '../assets/css/loadconfirmation.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass LoadConfirmation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.location.state,\r\n            loading: false,\r\n            carrier: {}\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"Confirmation\", this.state.data);\r\n    }\r\n\r\n    confirmLoad = (id) => {\r\n        firebase.database().ref('loads/' + id).update\r\n        ({\r\n          confirmation: true,\r\n        }, function(error) {\r\n          if (error) {\r\n            // The write failed...\r\n          } else {\r\n            // The write Success...\r\n          }\r\n        });\r\n    \r\n        this.props.history.push('/yourloads');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // driver\r\n            <section>\r\n                <div className=\"load py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n\r\n                            <div className=\"col-md-4\">\r\n                                <ul class=\"list-group\">\r\n                                    <li class=\"list-group-item\">\r\n                                        <h3>Carrier Company</h3>\r\n                                        <p>{JSON.parse(this.state.data.data.carrier).company_name}</p>\r\n                                    </li>\r\n                                    <li class=\"list-group-item\">\r\n                                        <h3>Pickup Location & Time</h3>\r\n                                        <p>{this.state.data.data.pickup_location}</p>\r\n                                        <small className=\"text-muted\">{new Date(this.state.data.data.pickup_date_time).toLocaleString()}</small>\r\n                                    </li>\r\n                                    <li class=\"list-group-item\">\r\n                                        <h3>Dropoff Location & Time</h3>\r\n                                        <p>{this.state.data.data.delivery_location}</p>\r\n                                        <small className=\"text-muted\">{new Date(this.state.data.data.delivery_date_time).toLocaleString()}</small>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div class=\"form-check pt-3\">\r\n                                    <input type=\"checkbox\" class=\"form-check-input\" />\r\n                                    <label class=\"form-check-label\"><small>Enable GPS</small></label>\r\n                                </div>\r\n\r\n                                <a className=\"btn btn-primary w-100 mt-5 font-weight-bold\" onClick={() => { this.confirmLoad(this.state.data.data.id) }}>Confirm</a>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default LoadConfirmation;","import React from 'react';\r\nimport '../assets/css/signup.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Signup extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: false\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"Signup\");\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // driver\r\n            <section>\r\n                <div className=\"signup-form py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div class=\"form-group\">\r\n                                            <label>Email address</label>\r\n                                            <input type=\"email\" class=\"form-control\" placeholder=\"Enter email\" />\r\n                                            <small class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label>Password</label>\r\n                                            <input type=\"password\" class=\"form-control\" placeholder=\"Password\" />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6 col-md-6\">\r\n                                                <div class=\"form-check pb-2\">\r\n                                                    <input type=\"checkbox\" class=\"form-check-input\" />\r\n                                                    <label class=\"form-check-label\"><small>Remember Me</small></label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6 col-md-6 float-right\">\r\n                                                <a href=\"#\"><small>Forget Password?</small></a>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <button type=\"submit\" className=\"btn btn-primary w-100 mt-5 font-weight-bold\">Sign Up</button>\r\n\r\n                                        <div className=\"col-12 col-md-6 text-center pt-3\">\r\n                                            <Link to=\"/login\">Have an account? Login</Link>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section> \r\n        );\r\n    }\r\n}\r\nexport default Signup;","import React from 'react';\r\nimport firebase from '../core/firebase/firebase';\r\nimport '../assets/css/realtime.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass RealTime extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.location.state,\r\n            update: 'No Update',\r\n            loading: false\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"RealTime\", this.state.data);\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    sendUpdate = (e) => {\r\n        this.setState({ \r\n            update: e.target.value \r\n        });\r\n\r\n        const updateRef = firebase.database().ref('updates');\r\n  \r\n        const updateData = {\r\n            update: this.state.update,\r\n            driver: this.state.data.data.driver\r\n        };\r\n        \r\n        // storing update as a new record\r\n        updateRef.push(updateData, function(error) {\r\n            if (error) {\r\n                alert(\"Update could not be sent.\" + error);\r\n            } else {\r\n                alert(\"Update Sent successfully.\");\r\n            }\r\n        });\r\n    }\r\n\r\n    pickupLoad = (id) => {\r\n        firebase.database().ref('loads/' + id).update\r\n        ({\r\n          status: 'pickup',\r\n        }, function(error) {\r\n          if (error) {\r\n            // The write failed...\r\n          } else {\r\n            // The write Success...\r\n          }\r\n        });\r\n    \r\n        this.props.history.push('/yourloads');\r\n    }\r\n\r\n    deliverLoad = (id) => {\r\n        firebase.database().ref('loads/' + id).update\r\n        ({\r\n          status: 'delivered',\r\n          load_type: 'past',\r\n        }, function(error) {\r\n          if (error) {\r\n            // The write failed...\r\n          } else {\r\n            // The write Success...\r\n          }\r\n        });\r\n    \r\n        this.props.history.push('/yourloads');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // driver\r\n            <section>\r\n                <div className=\"time py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card-body\">\r\n\r\n                                    {\r\n                                        this.state.data.data.status == \"Load Created\" || this.state.data.data.status == \"pickup\" ?\r\n                                        <div>\r\n                                            <h2>Send Update</h2>\r\n                                            <div className=\"form-group\">\r\n                                                <select className=\"form-control\" onChange={(e) => { this.sendUpdate(e) }}>\r\n                                                    <option value=\"accident\">Accident</option>\r\n                                                    <option value=\"traffic\">Traffic</option>\r\n                                                    <option value=\"rest-stop\">Rest Stop</option>\r\n                                                    <option value=\"help\">Help</option>\r\n                                                </select>\r\n\r\n                                                <textarea className=\"form-control\" rows=\"5\" placeholder=\"Your Notes\" disabled>the notes entered for the load</textarea>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"text-center\">\r\n                                            <h3 className=\"text-success pb-2\"><i class=\"fas fa-check-circle\"></i></h3>\r\n                                            <p>Delivered Successfully</p>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        this.state.data.data.status == \"Load Created\" ?\r\n                                            <a className=\"btn btn-primary w-100 mt-4 font-weight-bold\" onClick={() => { this.pickupLoad(this.state.data.data.id) }}>Pickup</a>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    {\r\n                                        this.state.data.data.status == \"pickup\" ?\r\n                                            <a className=\"btn btn-success w-100 mt-4 font-weight-bold\" onClick={() => { this.deliverLoad(this.state.data.data.id) }}>Delivered</a>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    {\r\n                                        this.state.data.data.status == \"delivered\" ?\r\n                                            <a className=\"btn btn-warning w-100 mt-4 font-weight-bold\">Give Rating</a>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    <Link to=\"/yourloads\" className=\"d-block text-center pt-3\"><i class=\"fas fa-chevron-left\"></i> Back to your Loads</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default RealTime;","class DataHolding {\r\n\r\n    constructor() {\r\n        this.data = {};\r\n    }\r\n\r\n    getData(data) {\r\n        this.data = data;\r\n        // console.log(data);\r\n    }\r\n\r\n    setData() {\r\n        return this.data;\r\n    }\r\n\r\n}\r\nexport default new DataHolding;","import React from 'react';\r\nimport '../assets/css/yourloads.css';\r\nimport firebase from '../core/firebase/firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport DataHolding from '../core/services/data-holding-service';\r\n\r\nclass YourLoads extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loads: [],\r\n            loading: false,\r\n            customerData: JSON.parse(localStorage.getItem('customer'))\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        this.getLoads();\r\n    }\r\n\r\n    getLoads = () => {\r\n        let account = '';\r\n        let tempLloads = [];\r\n        let filteredLoads = [];\r\n\r\n        const loadRef = firebase.database().ref('loads');\r\n    \r\n        loadRef.on('value', (snapshot) => {\r\n          const loads = snapshot.val();\r\n    \r\n          for (let id in loads) {\r\n            tempLloads.push({ id, ...loads[id] });\r\n          }\r\n\r\n            //   this.setState({ loads: tempLloads });\r\n\r\n            tempLloads.map((item, i) => {\r\n                if (this.state.customerData.account_type == 'driver') {\r\n                    account = JSON.parse(item.driver).company_email;\r\n                }\r\n                if (this.state.customerData.account_type == 'shipper') {\r\n                    account = JSON.parse(item.shipper).company_email;\r\n                }\r\n                if (this.state.customerData.account_type == 'carrier') {\r\n                    account = JSON.parse(item.carrier).company_email;\r\n                }\r\n\r\n                if (account == this.state.customerData.company_email) {\r\n                    filteredLoads.push(item);\r\n                    console.log(item);\r\n                }\r\n            })\r\n\r\n            this.setState({ loads: filteredLoads, loading: true });\r\n        });\r\n    };\r\n\r\n    setData = (data) => {\r\n        if (data.load_type == 'active') {\r\n            DataHolding.getData(data);\r\n\r\n            if (this.state.customerData.account_type == 'driver') {\r\n                if (data.confirmation == true) {\r\n                    this.props.history.push('/realtime', { data });\r\n                }\r\n                if (data.confirmation == false) {\r\n                    this.props.history.push('/loadconfirmation', { data });\r\n                }\r\n            }\r\n            else {\r\n                this.props.history.push('/loaddetails', { data });\r\n            }\r\n        }\r\n        else {\r\n            alert('Load Type is not active.');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // trucking company\r\n            <section>\r\n                <div className=\"loads py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card-body\">\r\n                                       \r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <h2>Loads Type</h2>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-6\">\r\n                                            <a href=\"#\"><span className=\"badge badge-pill badge-success float-right px-4 py-2\">Filter</span></a>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mt-5\">\r\n                                        <select className=\"form-control\">\r\n                                            <option>Active</option>\r\n                                            <option>Upcoming</option>\r\n                                            <option>Past</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    {\r\n                                        this.state.loading && this.state.loads.length > 0 ?\r\n                                        <ul className=\"list-group\">\r\n                                            {\r\n                                                this.state.loads.map((item, key) => {\r\n                                                    return (\r\n                                                        <li className=\"list-group-item\" key={key} onClick={() => this.setData(item)}>\r\n                                                            <h6>Load ID: {item.id}</h6>\r\n                                                            <p className=\"pt-3\">Pickup: {item.pickup_location}</p>\r\n                                                            <p>Delivery: {item.delivery_location}</p>\r\n                                                        </li>\r\n                                                    \r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </ul>\r\n                                        :\r\n                                        <div>\r\n                                            { !this.state.loading ? <p className=\"py-4 text-center\">Loading ...</p> : null}\r\n                                            { this.state.loading ? <p className=\"py-4 text-center\">No Loads Found</p> : null}\r\n                                        </div>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default YourLoads;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/css/loaddetails.css';\r\n\r\nimport map from '../assets/img/map.png'\r\n\r\nimport DataHolding from '../core/services/data-holding-service';\r\n\r\nclass LoadDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.location.state,\r\n            loading: false,\r\n            userDetails: JSON.parse(localStorage.getItem('user')),\r\n            customerDetails: JSON.parse(localStorage.getItem('customer')),\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"LoadDetails\", this.state.data);\r\n        this.getDetails();    \r\n    }\r\n\r\n    async getDetails() {\r\n        var details = DataHolding.setData();\r\n        await console.log(details);\r\n        this.setState({ data: details });\r\n\r\n        if (!this.state.data.id) {\r\n            this.props.history.push('/yourloads');\r\n        }\r\n\r\n        // console.log(\"getDetails > \", this.state.data);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // trucking company\r\n            <section>\r\n                <div className=\"detail py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n\r\n                            <div className=\"col-12 pb-3\">\r\n                                <Link to=\"/yourloads\" className=\"badge badge-pill badge-dark px-3 py-2\"><i class=\"pr-2 fas fa-chevron-left\"></i>Back</Link>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n\r\n                                        <h2>Load Details</h2>\r\n\r\n                                        <div class=\"form-check pt-4\">\r\n                                            <input type=\"checkbox\" class=\"form-check-input\" />\r\n                                            <label class=\"form-check-label\"><small>Notify me on all activities</small></label>\r\n                                        </div>\r\n\r\n                                        <h4>Pickup Time</h4>\r\n                                        <p>{new Date(this.state.data.pickup_date_time).toLocaleString()} </p>\r\n\r\n                                        <h4>Estimated Delivery (Google Maps)</h4>\r\n                                        <p>{new Date(this.state.data.delivery_date_time).toLocaleString()}</p>\r\n\r\n                                        <h4>Live Tracking</h4>\r\n                                        <img src={map} />\r\n\r\n                                        {\r\n                                            this.state.customerDetails.account_type == 'shipper' ?\r\n                                            <div>\r\n                                                <div class=\"form-check pt-4\">\r\n                                                    <input type=\"checkbox\" class=\"form-check-input\" />\r\n                                                    <label class=\"form-check-label\"><small>Agree on price</small></label>\r\n                                                </div>\r\n\r\n                                                <button type=\"submit\" className=\"btn btn-success w-100 mt-2 font-weight-bold\">Pay Now</button>\r\n\r\n                                                <button type=\"submit\" className=\"btn btn-warning w-100 mt-4 font-weight-bold\">Contact For Help</button>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default LoadDetails;","import React from 'react';\r\nimport '../assets/css/shipper.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Shipper extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: false\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"Shipper\");\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // Shipper\r\n            <section>\r\n                <div className=\"shipper py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card-body\">\r\n                                    <h2>Agree On Price</h2>\r\n\r\n                                    <div class=\"form-check pt-4\">\r\n                                        <input type=\"checkbox\" class=\"form-check-input\" />\r\n                                        <label class=\"form-check-label\"><small>Agree on price</small></label>\r\n                                    </div>\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-success w-100 mt-5 font-weight-bold\">Pay Now</button>\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-warning w-100 mt-4 font-weight-bold\">Contact For Help</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default Shipper;","import React from 'react';\r\nimport '../assets/css/allpayment.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AllPayment extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: false\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"AllPayment\");\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // paymentlisting\r\n            <section>\r\n                <div className=\"payment py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card-body\">\r\n                                    <h2>All Payments</h2>\r\n\r\n                                    <ul class=\"list-group pt-4\">\r\n                                        <li class=\"list-group-item\">\r\n                                            <h3>ID# 754915357</h3>\r\n                                            <p className=\"pt-2\">ABC Truckers</p>\r\n                                            <p>02-Octuber-2020  (12:00 PM)</p>\r\n                                        </li>\r\n                                        <li class=\"list-group-item\">\r\n                                            <h3>ID# 549823591</h3>\r\n                                            <p className=\"pt-2\">DSZ Truckers</p>\r\n                                            <p>05-August-2020  (03:00 PM)</p>\r\n                                        </li>\r\n                                        <li class=\"list-group-item\">\r\n                                            <h3>ID# 105068751</h3>\r\n                                            <p className=\"pt-2\">PRB Truckers</p>\r\n                                            <p>10-March-2020  (05:00 AM)</p>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default AllPayment;","import React from 'react';\r\nimport firebase from '../core/firebase/firebase';\r\nimport '../assets/css/setting.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport profile from '../assets/img/profile.jpg'\r\nimport loadingContent from '../assets/img/loading-content.gif'\r\n\r\nclass Setting extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userDetails: JSON.parse(localStorage.getItem('user')),\r\n            customerDetails: JSON.parse(localStorage.getItem('customer')),\r\n            name: '',\r\n            email: '',\r\n            contact: '',\r\n            account_type: ''\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        this.getProfile();\r\n    }\r\n\r\n    getProfile = () => {\r\n        let profileRef = firebase.database().ref('customers/' + this.state.customerDetails.id);\r\n\r\n        profileRef.on('value', (snapshot) => {\r\n            const profile = snapshot.val();\r\n            console.log(\"profile\", profile);\r\n\r\n            this.setState({\r\n                name: profile.company_name,\r\n                email: profile.company_email,\r\n                contact: profile.company_contact,\r\n                account_type: profile.account_type,\r\n            });\r\n        })\r\n    }\r\n\r\n    onChangeInput = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n        console.log(this.state);\r\n    }\r\n\r\n    updateProfile = () => {\r\n        firebase.database().ref('customers/' + this.state.customerDetails.id).set({\r\n          company_name: this.state.name,\r\n          company_contact: this.state.contact,\r\n          company_email: this.state.email,\r\n        }, function(error) {\r\n          if (error) {\r\n            // The write failed...\r\n          } else {\r\n            // The write Success...\r\n          }\r\n        });\r\n    \r\n        alert(\"Profile Updated.\");\r\n        this.getProfile();\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            // setting\r\n            <section>\r\n                <div className=\"setting py-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card-body\">\r\n\r\n                                    <h2>Settings</h2>\r\n\r\n                                    {\r\n                                        this.state.name ? \r\n                                        <div>\r\n                                             <div className=\"row main\">\r\n                                                <div className=\"col-4\">\r\n                                                    <img className=\"profile\" src={profile} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-8\">\r\n                                                    <div className=\"content\">\r\n                                                        <h2 className=\"text-capitalize\">{this.state.name}</h2>\r\n                                                        <p className=\"text-capitalize\">{this.state.account_type}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <form>\r\n                                                <div class=\"form-group mt-4\">\r\n                                                    <label>Name</label>\r\n                                                    <input type=\"text\" name=\"name\" class=\"form-control\" placeholder=\"John Mychle\" value={this.state.name} onChange={(e) => this.onChangeInput(e) } />\r\n                                                </div>\r\n\r\n                                                <div class=\"form-group mt-4\">\r\n                                                    <label>Email</label>\r\n                                                    <input type=\"email\" name=\"email\" class=\"form-control\" placeholder=\"john@email.com\" value={this.state.email} onChange={(e) => this.onChangeInput(e) } />\r\n                                                </div>\r\n\r\n                                                <div class=\"form-group\">\r\n                                                    <label>Contact#</label>\r\n                                                    <input type=\"text\" name=\"contact\" class=\"form-control\" placeholder=\"+923314599326\" value={this.state.contact} onChange={(e) => this.onChangeInput(e) } />\r\n                                                </div>\r\n                                                \r\n                                                <a className=\"btn btn-success w-100 mt-5 font-weight-bold\" onClick={() => { this.updateProfile() } }>Update Profile</a>\r\n                                            </form>\r\n                                        </div>\r\n                                        :\r\n                                        <img className=\"pt-5\" width=\"100%\" src={loadingContent} />\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default Setting;","import React, {useState} from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './layout/Header';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport LoadConfirmation from './components/LoadConfirmation';\r\nimport RealTime from './components/RealTime';\r\nimport YourLoads from './components/YourLoads'; \r\nimport LoadDetails from './components/LoadDetails';\r\nimport Shipper from './components/Shipper';\r\nimport AllPayment from './components/AllPayment';\r\nimport Setting from './components/Setting';\r\n\r\nimport { \r\n  BrowserRouter as Router, \r\n  Redirect,\r\n  Route,\r\n  Switch   \r\n} from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n  const [customer, setCustomer] = useState(JSON.parse(localStorage.getItem('customer')));\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header user={user} customer={customer} />\r\n          \r\n          {/* all components */} \r\n          <div>\r\n            <Route exact path=\"/\" component={Login} /> \r\n            <Switch>\r\n              <Route path='/login' component={Login}></Route>\r\n              {/* <Route path='/signup' component={Signup}></Route> */}\r\n              <Route path='/loadconfirmation' component={LoadConfirmation}></Route>\r\n              <Route path='/realtime' component={RealTime}></Route>\r\n              <Route path='/yourloads' component={YourLoads}></Route> \r\n              <Route path='/loaddetails' component={LoadDetails}></Route> \r\n              <Route path='/shipper' component={Shipper}></Route>\r\n              <Route path='/allpayment' component={AllPayment}></Route>\r\n              <Route path='/setting' component={Setting}></Route>\r\n            </Switch>\r\n          </div>\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}